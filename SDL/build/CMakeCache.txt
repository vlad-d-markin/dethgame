# This is the CMakeCache file.
# For build in directory: c:/Users/Eagle Owl/Desktop/dethgame/dethgame/SDL/build
# It was generated by CMake: C:/Program Files (x86)/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Use 3Dnow! MMX assembly routines
3DNOW:BOOL=ON

//Support the ALSA audio API
ALSA:BOOL=OFF

//Use Altivec assembly routines
ALTIVEC:BOOL=ON

//Support the Analog Real Time Synthesizer
ARTS:BOOL=OFF

//Enable assembly routines
ASSEMBLY:BOOL=ON

//Enable internal sanity checks (auto/disabled/release/enabled/paranoid)
ASSERTIONS:STRING=auto

//Use clock_gettime() instead of gettimeofday()
CLOCK_GETTIME:BOOL=OFF

//Path to a program.
CMAKE_AR:FILEPATH=C:/MinGW/bin/ar.exe

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//C compiler
CMAKE_C_COMPILER:FILEPATH=C:/MinGW/bin/gcc.exe

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Convert GNU import libraries to MS format (requires Visual Studio)
CMAKE_GNUtoMS:BOOL=OFF

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/SDL2

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/MinGW/bin/ld.exe

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=C:/MinGW/bin/mingw32-make.exe

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=C:/MinGW/bin/nm.exe

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=C:/MinGW/bin/objcopy.exe

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=C:/MinGW/bin/objdump.exe

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=SDL2

//Path to a program.
CMAKE_RANLIB:FILEPATH=C:/MinGW/bin/ranlib.exe

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/MinGW/bin/windres.exe

//Flags for Windows Resource Compiler.
CMAKE_RC_FLAGS:STRING=' '

//Path to a program.
CMAKE_SH:FILEPATH=C:/Program Files/Git/usr/bin/sh.exe

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=C:/MinGW/bin/strip.exe

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Use DirectX for Windows audio/video
DIRECTX:BOOL=ON

//Support the disk writer audio driver
DISKAUDIO:BOOL=ON

//Support the dummy audio driver
DUMMYAUDIO:BOOL=ON

//Support the Enlightened Sound Daemon
ESD:BOOL=OFF

//Use FusionSound audio driver
FUSIONSOUND:BOOL=OFF

//Use gcc builtin atomics
GCC_ATOMICS:BOOL=ON

//Use the Touchscreen library for input
INPUT_TSLIB:BOOL=OFF

//Use the system C library
LIBC:BOOL=ON

//Use MMX assembly routines
MMX:BOOL=ON

//Support the NAS audio API
NAS:BOOL=OFF

//Dynamically load NAS audio API
NAS_SHARED:BOOL=OFF

//Support the OSS audio API
OSS:BOOL=OFF

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=PKG_CONFIG_EXECUTABLE-NOTFOUND

//Use POSIX threads for multi-threading
PTHREADS:BOOL=OFF

//Use PulseAudio
PULSEAUDIO:BOOL=OFF

//Enable the Direct3D render driver
RENDER_D3D:BOOL=0

//Use an rpath when linking SDL
RPATH:BOOL=OFF

//Dependencies for the target
SDL2-static_LIB_DEPENDS:STATIC=general;m;general;user32;general;gdi32;general;winmm;general;imm32;general;ole32;general;oleaut32;general;version;general;uuid;general;mingw32;general;-Wl,--no-undefined;general;-mwindows;

//Value Computed by CMake
SDL2_BINARY_DIR:STATIC=C:/Users/Eagle Owl/Desktop/dethgame/dethgame/SDL/build

//Dependencies for the target
SDL2_LIB_DEPENDS:STATIC=general;m;general;user32;general;gdi32;general;winmm;general;imm32;general;ole32;general;oleaut32;general;version;general;uuid;general;mingw32;general;-Wl,--no-undefined;general;-mwindows;

//Value Computed by CMake
SDL2_SOURCE_DIR:STATIC=C:/Users/Eagle Owl/Desktop/dethgame/dethgame/SDL

//Dependencies for target
SDL2main_LIB_DEPENDS:STATIC=

//Enable the Atomic subsystem
SDL_ATOMIC:BOOL=ON

//Enable the Audio subsystem
SDL_AUDIO:BOOL=ON

//Enable the CPUinfo subsystem
SDL_CPUINFO:BOOL=ON

//Use dlopen for shared object loading
SDL_DLOPEN:BOOL=ON

//Enable the Events subsystem
SDL_EVENTS:BOOL=ON

//Enable the File subsystem
SDL_FILE:BOOL=ON

//Enable the Filesystem subsystem
SDL_FILESYSTEM:BOOL=ON

//Enable the Haptic subsystem
SDL_HAPTIC:BOOL=ON

//Enable the Joystick subsystem
SDL_JOYSTICK:BOOL=ON

//Enable the Loadso subsystem
SDL_LOADSO:BOOL=ON

//Enable the Power subsystem
SDL_POWER:BOOL=ON

//Enable the Render subsystem
SDL_RENDER:BOOL=ON

//Build a shared version of the library
SDL_SHARED:BOOL=ON

//Build a static version of the library
SDL_STATIC:BOOL=ON

//Static version of the library should be built with Position Independent
// Code
SDL_STATIC_PIC:BOOL=OFF

//Enable the Threads subsystem
SDL_THREADS:BOOL=ON

//Enable the Timers subsystem
SDL_TIMERS:BOOL=ON

//Enable the Video subsystem
SDL_VIDEO:BOOL=ON

//Support the sndio audio API
SNDIO:BOOL=OFF

//Use SSE assembly routines
SSE:BOOL=ON

//Use SSE2 assembly routines
SSE2:BOOL=OFF

//Allow GCC to use SSE floating point math
SSEMATH:BOOL=OFF

//Use Cocoa video driver
VIDEO_COCOA:BOOL=OFF

//Use DirectFB video driver
VIDEO_DIRECTFB:BOOL=OFF

//Use dummy video driver
VIDEO_DUMMY:BOOL=ON

//Use Mir video driver
VIDEO_MIR:BOOL=OFF

//Include OpenGL support
VIDEO_OPENGL:BOOL=ON

//Include OpenGL ES support
VIDEO_OPENGLES:BOOL=0

//Use Raspberry Pi video driver
VIDEO_RPI:BOOL=OFF

//Use Vivante EGL video driver
VIDEO_VIVANTE:BOOL=OFF

//Use Wayland video driver
VIDEO_WAYLAND:BOOL=OFF

//Use X11 video driver
VIDEO_X11:BOOL=OFF

//Path to a program.
WINDRES:FILEPATH=C:/MinGW/bin/windres.exe


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/Eagle Owl/Desktop/dethgame/dethgame/SDL/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=5
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files (x86)/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files (x86)/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files (x86)/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=C:/Program Files (x86)/CMake/bin/cmake-gui.exe
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=MinGW Makefiles
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/Eagle Owl/Desktop/dethgame/dethgame/SDL
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files (x86)/CMake/share/cmake-3.5
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Test HAVE_3DNOW
HAVE_3DNOW:INTERNAL=1
//Have function abs
HAVE_ABS:INTERNAL=1
//Have function acos
HAVE_ACOS:INTERNAL=1
//Have function alloca
HAVE_ALLOCA:INTERNAL=
//Have include alloca.h
HAVE_ALLOCA_H:INTERNAL=
//Test HAVE_ALTIVEC
HAVE_ALTIVEC:INTERNAL=
//Test HAVE_ALTIVEC_H_HDR
HAVE_ALTIVEC_H_HDR:INTERNAL=
//Have function asin
HAVE_ASIN:INTERNAL=1
//Have function atan
HAVE_ATAN:INTERNAL=1
//Have function atan2
HAVE_ATAN2:INTERNAL=1
//Have function atof
HAVE_ATOF:INTERNAL=1
//Have function atoi
HAVE_ATOI:INTERNAL=1
//Have function bcopy
HAVE_BCOPY:INTERNAL=
//Have function calloc
HAVE_CALLOC:INTERNAL=1
//Have function ceil
HAVE_CEIL:INTERNAL=1
//Have function copysign
HAVE_COPYSIGN:INTERNAL=1
//Have function cos
HAVE_COS:INTERNAL=1
//Have function cosf
HAVE_COSF:INTERNAL=1
//Have include ctype.h
HAVE_CTYPE_H:INTERNAL=1
//Have include d3d11_1.h
HAVE_D3D11_H:INTERNAL=
//Have include d3d9.h
HAVE_D3D_H:INTERNAL=1
//Have include ddraw.h
HAVE_DDRAW_H:INTERNAL=
//Have include dinput.h
HAVE_DINPUT_H:INTERNAL=
//Have include dsound.h
HAVE_DSOUND_H:INTERNAL=
//Have include dxgi.h
HAVE_DXGI_H:INTERNAL=
//Have function fabs
HAVE_FABS:INTERNAL=1
//Have function floor
HAVE_FLOOR:INTERNAL=1
//Have function free
HAVE_FREE:INTERNAL=1
//Have function fseeko
HAVE_FSEEKO:INTERNAL=
//Have function fseeko64
HAVE_FSEEKO64:INTERNAL=1
//Test HAVE_GCC_ATOMICS
HAVE_GCC_ATOMICS:INTERNAL=1
//Test HAVE_GCC_FVISIBILITY
HAVE_GCC_FVISIBILITY:INTERNAL=1
//Test HAVE_GCC_PREFERRED_STACK_BOUNDARY
HAVE_GCC_PREFERRED_STACK_BOUNDARY:INTERNAL=1
//Test HAVE_GCC_WALL
HAVE_GCC_WALL:INTERNAL=1
//Test HAVE_GCC_WDECLARATION_AFTER_STATEMENT
HAVE_GCC_WDECLARATION_AFTER_STATEMENT:INTERNAL=1
//Test HAVE_GCC_WERROR_DECLARATION_AFTER_STATEMENT
HAVE_GCC_WERROR_DECLARATION_AFTER_STATEMENT:INTERNAL=1
//Test HAVE_GCC_WSHADOW
HAVE_GCC_WSHADOW:INTERNAL=1
//Have function getenv
HAVE_GETENV:INTERNAL=1
//Have include iconv.h
HAVE_ICONV_H:INTERNAL=
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have function itoa
HAVE_ITOA:INTERNAL=1
//Have library iconv
HAVE_LIBICONV:INTERNAL=
//Have library m
HAVE_LIBM:INTERNAL=1
//Have function log
HAVE_LOG:INTERNAL=1
//Have function malloc
HAVE_MALLOC:INTERNAL=1
//Have include malloc.h
HAVE_MALLOC_H:INTERNAL=1
//Have include math.h
HAVE_MATH_H:INTERNAL=1
//Have function memcmp
HAVE_MEMCMP:INTERNAL=1
//Have function memcpy
HAVE_MEMCPY:INTERNAL=1
//Have function memmove
HAVE_MEMMOVE:INTERNAL=1
//Have include memory.h
HAVE_MEMORY_H:INTERNAL=1
//Have function memset
HAVE_MEMSET:INTERNAL=1
//Test HAVE_MMX
HAVE_MMX:INTERNAL=1
//Test HAVE_MPROTECT
HAVE_MPROTECT:INTERNAL=
//Have symbol M_PI
HAVE_M_PI:INTERNAL=1
//Have function nanosleep
HAVE_NANOSLEEP:INTERNAL=1
//Test HAVE_NO_UNDEFINED
HAVE_NO_UNDEFINED:INTERNAL=1
//Have function pow
HAVE_POW:INTERNAL=1
//Have function putenv
HAVE_PUTENV:INTERNAL=1
//Have function qsort
HAVE_QSORT:INTERNAL=1
//Have function realloc
HAVE_REALLOC:INTERNAL=1
//Test HAVE_SA_SIGACTION
HAVE_SA_SIGACTION:INTERNAL=
//Have function scalbn
HAVE_SCALBN:INTERNAL=1
//Have function setenv
HAVE_SETENV:INTERNAL=
//Have function setjmp
HAVE_SETJMP:INTERNAL=
//Have function sigaction
HAVE_SIGACTION:INTERNAL=
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Have function sin
HAVE_SIN:INTERNAL=1
//Have function sinf
HAVE_SINF:INTERNAL=1
//Result of TRY_COMPILE
HAVE_SIZEOF_SIZE_T:INTERNAL=TRUE
//Have function sqrt
HAVE_SQRT:INTERNAL=1
//Have function sqrtf
HAVE_SQRTF:INTERNAL=1
//Test HAVE_SSE
HAVE_SSE:INTERNAL=1
//Have include stdarg.h
HAVE_STDARG_H:INTERNAL=1
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have include stdio.h
HAVE_STDIO_H:INTERNAL=1
//Have include stdlib.h
HAVE_STDLIB_H:INTERNAL=1
//Have function strcasecmp
HAVE_STRCASECMP:INTERNAL=1
//Have function strchr
HAVE_STRCHR:INTERNAL=1
//Have function strcmp
HAVE_STRCMP:INTERNAL=1
//Have function strdup
HAVE_STRDUP:INTERNAL=1
//Have include strings.h
HAVE_STRINGS_H:INTERNAL=1
//Have include string.h
HAVE_STRING_H:INTERNAL=1
//Have function strlcat
HAVE_STRLCAT:INTERNAL=
//Have function strlcpy
HAVE_STRLCPY:INTERNAL=
//Have function strlen
HAVE_STRLEN:INTERNAL=1
//Have function strncasecmp
HAVE_STRNCASECMP:INTERNAL=1
//Have function strncmp
HAVE_STRNCMP:INTERNAL=1
//Have function strrchr
HAVE_STRRCHR:INTERNAL=1
//Have function strstr
HAVE_STRSTR:INTERNAL=1
//Have function strtod
HAVE_STRTOD:INTERNAL=1
//Have function strtol
HAVE_STRTOL:INTERNAL=1
//Have function strtoll
HAVE_STRTOLL:INTERNAL=1
//Have function strtoul
HAVE_STRTOUL:INTERNAL=1
//Have function strtoull
HAVE_STRTOULL:INTERNAL=1
//Have function sysconf
HAVE_SYSCONF:INTERNAL=
//Have function sysctlbyname
HAVE_SYSCTLBYNAME:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have function tan
HAVE_TAN:INTERNAL=1
//Have function tanf
HAVE_TANF:INTERNAL=1
//Have function unsetenv
HAVE_UNSETENV:INTERNAL=
//Have function vsnprintf
HAVE_VSNPRINTF:INTERNAL=1
//Have function vsscanf
HAVE_VSSCANF:INTERNAL=1
//Test HAVE_WIN32_CC
HAVE_WIN32_CC:INTERNAL=1
//Have include xaudio2.h
HAVE_XAUDIO2_H:INTERNAL=
//Test HAVE_XINPUT_H
HAVE_XINPUT_H:INTERNAL=
//Have function _i64toa
HAVE__I64TOA:INTERNAL=1
//Have function _ltoa
HAVE__LTOA:INTERNAL=1
//Have function _stricmp
HAVE__STRICMP:INTERNAL=1
//Have function _strlwr
HAVE__STRLWR:INTERNAL=1
//Have function _strnicmp
HAVE__STRNICMP:INTERNAL=1
//Have function _strrev
HAVE__STRREV:INTERNAL=1
//Have function _strupr
HAVE__STRUPR:INTERNAL=1
//Have function _ui64toa
HAVE__UI64TOA:INTERNAL=1
//Have function _uitoa
HAVE__UITOA:INTERNAL=
//Have function _ultoa
HAVE__ULTOA:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(size_t)
SIZEOF_SIZE_T:INTERNAL=4
//Have include dlfcn.h;stdint.h;stddef.h;inttypes.h;stdlib.h;strings.h;string.h;float.h
STDC_HEADERS:INTERNAL=1

